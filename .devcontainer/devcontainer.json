// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker-compose
{
	"name": "Grusp - Dagger Demo",
	"dockerComposeFile": "docker-compose.yml",
	"service": "grusp",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	"forwardPorts": [
		443
	],
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"moby": true,
			"azureDnsAutoDetection": true,
			"version": "20.10",
			"dockerDashComposeVersion": "v2"
		},
		"ghcr.io/devcontainers/features/go:1": {
			"version": "1.20"
		},
		"ghcr.io/devcontainers/features/node:1": {
			"nodeGypDependencies": true,
			"version": "18"
		},
		"ghcr.io/mpriscella/features/kind:1": {
			"version": "v0.17.0"
		},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
			"version": "1.25",
			"helm": "none",
			"minikube": "none"
		},
		"ghcr.io/guiyomh/features/golangci-lint:0": {},
		"ghcr.io/mpriscella/features/sops:1": {
			"version": "v3.7.3"
		},
		"ghcr.io/guiyomh/features/mage:0": {
			"version": "1.14.0"
		},
		"ghcr.io/jungaretti/features/make:1": {},
		"ghcr.io/eitsupi/devcontainer-features/jq-likes:1": {
			"jqVersion": "os-provided",
			"yqVersion": "latest",
			"gojqVersion": "latest"
		}
	},
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"editor.fontFamily": "'Go Mono', Menlo, Monaco, 'Courier New', monospace",
				"editor.find.addExtraSpaceOnTop": false,
				"editor.formatOnPaste": true,
				"editor.formatOnSave": true,
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.gopath": "/go",
				"go.buildOnSave": "off",
				"go.coverOnSingleTest": true,
				"go.coverOnSingleTestFile": true,
				"go.lintFlags": [
					"--fast"
				],
				"go.testTimeout": "300s",
				"go.coverageDecorator": {
					"type": "highlight"
				},
				"gopls": {
					"ui.semanticTokens": true
				},
				"vscode-kubernetes.kubectl-path": "/usr/local/bin/kubectl",
				"terminal.integrated.fontFamily": "'Go Mono', Menlo, Monaco, 'Courier New', monospace",
				// Theme setup
				"workbench.colorTheme": "GitHub Dark Colorblind (Beta)",
				"workbench.iconTheme": "vscode-icons",
				"workbench.editor.enablePreview": false
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				// Theme
				"GitHub.github-vscode-theme",
				"vscode-icons-team.vscode-icons",
				"golang.Go",
				// Tools
				"ms-vscode.makefile-tools",
				"ms-azuretools.vscode-docker",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				// Git
				"vivaxy.vscode-conventional-commits"
			]
		}
	},
	"postCreateCommand": ".devcontainer/setup.sh"
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}